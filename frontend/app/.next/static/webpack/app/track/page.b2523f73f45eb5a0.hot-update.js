"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/track/page",{

/***/ "(app-pages-browser)/./lib/api-services.ts":
/*!*****************************!*\
  !*** ./lib/api-services.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addServicoFavorito: function() { return /* binding */ addServicoFavorito; },\n/* harmony export */   createCidadao: function() { return /* binding */ createCidadao; },\n/* harmony export */   createPedido: function() { return /* binding */ createPedido; },\n/* harmony export */   createTipoServico: function() { return /* binding */ createTipoServico; },\n/* harmony export */   getCidadaoByDocumento: function() { return /* binding */ getCidadaoByDocumento; },\n/* harmony export */   getCidadaoById: function() { return /* binding */ getCidadaoById; },\n/* harmony export */   getCurrentUser: function() { return /* binding */ getCurrentUser; },\n/* harmony export */   getPedidoByCodigo: function() { return /* binding */ getPedidoByCodigo; },\n/* harmony export */   getPedidoById: function() { return /* binding */ getPedidoById; },\n/* harmony export */   listCidadaos: function() { return /* binding */ listCidadaos; },\n/* harmony export */   listDashboardItems: function() { return /* binding */ listDashboardItems; },\n/* harmony export */   listPedidos: function() { return /* binding */ listPedidos; },\n/* harmony export */   listPedidosByCidadao: function() { return /* binding */ listPedidosByCidadao; },\n/* harmony export */   listPedidosDoUsuarioLogado: function() { return /* binding */ listPedidosDoUsuarioLogado; },\n/* harmony export */   listServicosFavoritos: function() { return /* binding */ listServicosFavoritos; },\n/* harmony export */   listTiposServicos: function() { return /* binding */ listTiposServicos; },\n/* harmony export */   listTiposServicosByCategoria: function() { return /* binding */ listTiposServicosByCategoria; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   logout: function() { return /* binding */ logout; },\n/* harmony export */   registerUser: function() { return /* binding */ registerUser; },\n/* harmony export */   removeServicoFavorito: function() { return /* binding */ removeServicoFavorito; },\n/* harmony export */   toggleFavorito: function() { return /* binding */ toggleFavorito; },\n/* harmony export */   updateCidadao: function() { return /* binding */ updateCidadao; },\n/* harmony export */   updatePedidoStatus: function() { return /* binding */ updatePedidoStatus; },\n/* harmony export */   updateUserProfile: function() { return /* binding */ updateUserProfile; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _api_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-config */ \"(app-pages-browser)/./lib/api-config.ts\");\n/**\n * Serviços de API para o sistema Simple\n * Este arquivo contém as funções para interagir com o backend\n */ // First install axios: npm install axios @types/axios\n\n\n// Cliente axios configurado\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: _api_config__WEBPACK_IMPORTED_MODULE_0__.API_BASE,\n    timeout: _api_config__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TIMEOUT,\n    headers: _api_config__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_HEADERS\n});\n// Interceptor para adicionar token de autenticação\napiClient.interceptors.request.use((config)=>{\n    if (true) {\n        // Não adicionar token de autenticação para a rota de login ou registro\n        if (config.url === \"/auth/login\" || config.url === \"/auth/register\") {\n            return config;\n        }\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            if (!config.headers) config.headers = new axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].AxiosHeaders();\n            config.headers.Authorization = \"Bearer \".concat(token);\n        }\n    }\n    return config;\n});\n// Interceptor para tratar respostas globais, incluindo erros de autenticação\napiClient.interceptors.response.use((response)=>response, (error)=>{\n    const currentPath =  true ? window.location.pathname : 0;\n    // Verifica se o erro é 401 (Não Autorizado)\n    if (error.response && error.response.status === 401) {\n        // Evita loops de redirecionamento se já estiver na página de login ou registro\n        if (currentPath && currentPath !== \"/login\" && currentPath !== \"/register\") {\n            logout(); // Limpa o token e cookies\n            // Redireciona para a página de login\n            if (true) {\n                window.location.href = \"/login\";\n            }\n            // Retorna uma promessa que nunca resolve para evitar que o chamador original\n            // tente atualizar o estado de um componente desmontado.\n            return new Promise(()=>{});\n        }\n    }\n    // Para todos os outros erros, ou se já estiver em /login ou /register, rejeita a promessa\n    // para que o tratamento de erro local possa ocorrer.\n    return Promise.reject(error);\n});\n/**\n * Trata erros da API de forma padronizada\n */ const handleApiError = (error)=>{\n    if (error.response) {\n        // O servidor respondeu com um status de erro\n        const data = error.response.data;\n        return {\n            message: data.message || data.error || \"Erro desconhecido\",\n            status: error.response.status,\n            timestamp: data.timestamp\n        };\n    } else if (error.request) {\n        // A requisição foi feita mas não houve resposta\n        return {\n            message: \"N\\xe3o foi poss\\xedvel conectar ao servidor\",\n            status: 0\n        };\n    } else {\n        // Erro ao configurar a requisição\n        return {\n            message: error.message || \"Erro ao processar a requisi\\xe7\\xe3o\",\n            status: 0\n        };\n    }\n};\n/**\n * Realiza login no sistema\n */ const login = async (credentials)=>{\n    try {\n        const response = await apiClient.post(\"/auth/login\", credentials);\n        // Armazena o token para uso futuro\n        if (true) {\n            localStorage.setItem(\"token\", response.data.token);\n            // Salva o token como cookie\n            document.cookie = \"token=\".concat(response.data.token, \"; path=/; max-age=\").concat(60 * 60 * 24 * 7, \"; SameSite=Lax\"); // Expira em 7 dias\n        }\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Realiza logout do sistema\n */ const logout = ()=>{\n    if (true) {\n        localStorage.removeItem(\"token\");\n        // Remove o cookie do token\n        document.cookie = \"token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=Lax\";\n    }\n};\n/**\n * Registra um novo usuário\n */ const registerUser = async (user)=>{\n    try {\n        const response = await apiClient.post(\"/auth/register\", user);\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Obtém o usuário atual\n */ const getCurrentUser = async ()=>{\n    try {\n        const response = await apiClient.get(\"/users/me\");\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Atualiza o perfil do usuário atual\n */ const updateUserProfile = async (userData)=>{\n    try {\n        const response = await apiClient.put(\"/users/me\", userData);\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Lista todos os cidadãos (paginado)\n */ const listCidadaos = async function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, size = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    try {\n        const response = await apiClient.get(\"/cidadaos?page=\".concat(page, \"&size=\").concat(size));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Obtém um cidadão pelo ID\n */ const getCidadaoById = async (id)=>{\n    try {\n        const response = await apiClient.get(\"/cidadaos/\".concat(id));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Obtém um cidadão pelo documento\n */ const getCidadaoByDocumento = async (tipoDocumento, numeroDocumento)=>{\n    try {\n        const response = await apiClient.get(\"/cidadaos/documento?tipoDocumento=\".concat(tipoDocumento, \"&numeroDocumento=\").concat(numeroDocumento));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Cria um novo cidadão\n */ const createCidadao = async (cidadao)=>{\n    try {\n        const response = await apiClient.post(\"/cidadaos\", cidadao);\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Atualiza um cidadão existente\n */ const updateCidadao = async (id, cidadao)=>{\n    try {\n        const response = await apiClient.put(\"/cidadaos/\".concat(id), cidadao);\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Lista todos os pedidos (paginado)\n */ const listPedidos = async function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, size = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    try {\n        const response = await apiClient.get(\"/pedidos?page=\".concat(page, \"&size=\").concat(size));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Obtém um pedido pelo ID\n */ const getPedidoById = async (id)=>{\n    try {\n        const response = await apiClient.get(\"/pedidos/\".concat(id));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Obtém um pedido pelo código de acompanhamento\n */ const getPedidoByCodigo = async (codigo)=>{\n    try {\n        const response = await apiClient.get(\"/pedidos/codigo/\".concat(codigo));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Lista pedidos por cidadão (paginado)\n */ const listPedidosByCidadao = async function(cidadaoId) {\n    let page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, size = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 10;\n    try {\n        const response = await apiClient.get(\"/pedidos/cidadao/\".concat(cidadaoId, \"?page=\").concat(page, \"&size=\").concat(size));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Cria um novo pedido\n */ const createPedido = async (pedido)=>{\n    try {\n        const response = await apiClient.post(\"/pedidos\", pedido);\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Atualiza o status de um pedido\n */ const updatePedidoStatus = async (id, statusId)=>{\n    try {\n        const response = await apiClient.patch(\"/pedidos/\".concat(id, \"/status/\").concat(statusId));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Lista os tipos de serviços disponíveis\n */ const listTiposServicos = async ()=>{\n    try {\n        const response = await apiClient.get(\"/tipos-servicos\");\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Lista os tipos de serviços por categoria\n */ /**\n * Cria um novo tipo de serviço\n */ const createTipoServico = async (serviceData)=>{\n    try {\n        const response = await apiClient.post(\"/tipos-servicos\", serviceData);\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Lista os tipos de serviços por categoria\n */ const listTiposServicosByCategoria = async (categoriaId)=>{\n    try {\n        const response = await apiClient.get(\"/tipos-servicos/categoria/\".concat(categoriaId));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Lista os serviços favoritos do usuário\n */ const listServicosFavoritos = async ()=>{\n    try {\n        const response = await apiClient.get(\"/favoritos\");\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Adiciona um serviço aos favoritos\n */ const addServicoFavorito = async (servicoId)=>{\n    try {\n        await apiClient.post(\"/favoritos/\".concat(servicoId));\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Remove um serviço dos favoritos\n */ const removeServicoFavorito = async (servicoId)=>{\n    try {\n        await apiClient.delete(\"/favoritos/\".concat(servicoId));\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Adiciona ou remove um serviço dos favoritos do usuário atual\n */ const toggleFavorito = async (tipoServicoId)=>{\n    try {\n        // O endpoint exato pode variar, ajuste conforme a API do backend\n        // Pode ser um POST para adicionar e um DELETE para remover, ou um único endpoint que faz o toggle.\n        // Aqui, vamos assumir um endpoint POST que faz o toggle.\n        // Se o backend retornar os favoritos atualizados, você pode ajustar o tipo de retorno.\n        await apiClient.post(\"/usuarios/me/favoritos/\".concat(tipoServicoId));\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n/**\n * Lista os itens do dashboard (paginado)\n */ const listPedidosDoUsuarioLogado = async function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, size = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    try {\n        const response = await apiClient.get(\"/pedidos/meus-pedidos?page=\".concat(page, \"&size=\").concat(size));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\nconst listDashboardItems = async function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, size = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n    try {\n        const response = await apiClient.get(\"/dashboard?page=\".concat(page, \"&size=\").concat(size));\n        return response.data;\n    } catch (error) {\n        throw handleApiError(error);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api-services.ts\n"));

/***/ })

});
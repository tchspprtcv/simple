generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  role      String    @default("USER")
  requests  Request[]
  favorites Favorite[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Service {
  id          String     @id @default(cuid())
  name        String
  description String
  category    String
  requests    Request[]
  favorites   Favorite[]
  useCount    Int        @default(0)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Request {
  id           String         @id @default(cuid())
  trackingCode String        @unique @default(cuid())
  userId       String
  serviceId    String
  status       String
  details      String
  currentStatus String       @default("PENDING")
  statusHistory StatusHistory[]
  user         User          @relation(fields: [userId], references: [id])
  service      Service       @relation(fields: [serviceId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model StatusHistory {
  id          String   @id @default(cuid())
  requestId   String
  status      String
  description String
  date        DateTime @default(now())
  request     Request  @relation(fields: [requestId], references: [id])
}

model Favorite {
  id        String   @id @default(cuid())
  userId    String
  serviceId String
  user      User     @relation(fields: [userId], references: [id])
  service   Service  @relation(fields: [serviceId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, serviceId])
}